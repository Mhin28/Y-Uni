when creating a new controller class in API/Controllers

Controllers should follow RESTful API design principles and consistent structure:
1. Each controller should inherit from ControllerBase and have [ApiController] and [Route("api/[controller]")] attributes
2. Controllers should inject and use corresponding service interfaces (I{EntityName}Service)
3. Include proper constructor for dependency injection
4. Group endpoints with #region comments (e.g., #region CRUD Operations)
5. Standard CRUD operations should include:
   - GET: GetAll() - Returns all records
   - GET: GetById(Guid id) - Returns specific record by ID
   - POST: Create([FromBody] Post{EntityName}Model model) - Creates new record
   - PUT: Update([FromBody] {EntityName}Model model) - Updates existing record
   - DELETE: Delete(Guid id) - Deletes record by ID
6. Additional specialized endpoints should be placed in separate regions
7. All endpoints should:
   - Be async methods returning Task<IActionResult>
   - Use the service to perform operations
   - Return StatusCode(result.Code, result) where result is ResultModel from the service
8. Use [Authorize] attribute when authentication is required
9. Include XML comments for complex endpoints
10. Follow naming conventions seen in existing controllers

For security endpoints (like AuthorizeController), follow specific patterns for authentication and authorization 